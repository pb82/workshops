---
- name: make sure we are running correct Ansible Version
  ansible.builtin.assert:
    that:
    - ansible_version.major >= 2
    - ansible_version.minor >= 11

- name: make sure workshop_type is set to a correct value
  ansible.builtin.assert:
    that:
    - workshop_type is defined
    - workshop_type in valid_workshop_types
    msg: "{{ _msg_ }}"

- name: make sure dns_type is set to a correct value
  ansible.builtin.assert:
    that:
    - dns_type is defined
    - dns_type in valid_dns_type
    msg: "{{ _msg_ }}"

- name: make sure network_type is set to a correct value
  when: workshop_type == "networking"
  ansible.builtin.assert:
    that:
    - network_type is defined
    - network_type in valid_network_types
    msg: "{{ _msg_ }}"

- name: make sure DNS name is 65 characters or less
  vars:
    test_name: studentXXX-code.{{ ec2_name_prefix|lower }}.{{ workshop_dns_zone }}
    test_name_length: '{{ test_name | length }}'
  ansible.builtin.assert:
    that:
    - test_name_length | int <= 65
    msg: "you must make sure your DNS name is shorter"

- name: make sure security_console is set to a correct value
  when: workshop_type == "security"
  ansible.builtin.assert:
    that:
    - security_console is defined
    - security_console in valid_security_console_types
    msg: "{{ _msg_ }}"

- name: make sure we are not running with TESTWORKSHOP as the name so no overlap
  ansible.builtin.assert:
    that:
    - ec2_name_prefix != "TESTWORKSHOP"
    msg: "{{ _msg_ }}"

- name: make sure we are not using `ansible` as the password
  ansible.builtin.assert:
    that:
    - admin_password != "ansible"
    msg: "{{ _msg_ }}"

- name: automation controller checks
  when:
  - controllerinstall
  ansible.builtin.include_tasks: "controller.yml"

- name: check workshop specific information
  with_first_found:
  - '{{ role_path }}/tasks/{{ workshop_type }}.yml'
  - '{{ role_path }}/tasks/unsupported_workshop.yml'
  ansible.builtin.include_tasks: "{{item}}"
