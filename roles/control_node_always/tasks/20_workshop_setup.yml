---
- name: template out motd
  ansible.builtin.template:
    src: "motd.j2"
    dest: "/etc/motd"

- name: template ansible-navigator.yml into home directory
  ansible.builtin.template:
    src: "ansible-navigator.yml.j2"
    dest: "{{ _dest_ }}"
    owner: "{{ _owner_ }}"
    group: "{{ _group_ }}"

- name: Create .ssh directory if it does not exist
  ansible.builtin.file:
    path: "{{ _path_ }}"
    state: "directory"
    mode: "700"

- name: Put ssh-key in proper spot for student
  ansible.builtin.copy:
    src: "{{ _src_ }}"
    dest: "{{ _dest_ }}"
    owner: "{{ _owner_ }}"
    group: "{{ _group_ }}"
    mode: 256

- name: clean out /tmp/workshops
  ansible.builtin.file:
    path: "/tmp/workshops"
    state: "absent"

- name: Clone workshops repo
  ansible.builtin.git:
    accept_hostkey: true
    clone: true
    dest: "/tmp/workshops"
    repo: "{{ _repo_ }}"
    version: "{{ _version_ }}"
    refspec: "{{ _refspec_ }}"
    force: true

- name: Move relevant exercises to correct location
  ansible.builtin.copy:
    src: "{{ \"/tmp/workshops/\" + exercise_src_location | default(\"exercises/ansible_\" + workshop_type) + \"/\" }}"
    dest: "{{ _dest_ }}"
    remote_src: true
    owner: "{{ _owner_ }}"
    group: "{{ _group_ }}"
    local_follow: true

- name: Create lab inventory directory
  ansible.builtin.file:
    state: "directory"
    path: "{{ _path_ }}"

- name: Put student inventory in proper spot
  when: username in inventory_hostname
  ansible.builtin.copy:
    src: "{{ _src_ }}"
    dest: "{{ _dest_ }}"
    owner: "{{ _owner_ }}"
    group: "{{ _group_ }}"

- name: Copy instructor inventory to student1
  when: '"student1-ansible-1" in inventory_hostname'
  ansible.builtin.copy:
    src: "{{ output_dir }}/instructor_inventory.txt"
    dest: "/tmp/instructor-inventory"
    owner: "{{ _owner_ }}"
    group: "{{ _group_ }}"

- name: Install ansible.cfg in home directory
  ansible.builtin.template:
    src: "ansible.cfg.j2"
    dest: "/etc/ansible/ansible.cfg"

# Pull specific EE for each workshop based on workshop name

- name: Pull execution environment for {{ workshop_type }} workshop
  become_user: "{{ username }}"
  containers.podman.podman_image:
    name: "{{ lookup('vars', workshop_type + '_ee') }}"
  register: podman_pull
  until: podman_pull is not failed
  retries: 5
