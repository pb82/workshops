---
- name: Include OS-specific variables.
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"

- name: Check if GitLab configuration file already exists.
  register: gitlab_config_file
  ansible.builtin.stat:
    path: /etc/gitlab/gitlab.rb

- name: Check if GitLab is already installed.
  register: gitlab_file

  # Install GitLab and its dependencies.
  ansible.builtin.stat:
    path: /usr/bin/gitlab-ctl

- name: Install GitLab dependencies.
  ansible.builtin.package:
    name: "{{ gitlab_dependencies }}"
    state: present

- name: Install GitLab dependencies (Debian).
  when: ansible_os_family == 'Debian'
  ansible.builtin.package:
    name: gnupg2
    state: present

- name: Download GitLab repository installation script.
  when: not gitlab_file.stat.exists
  ansible.builtin.get_url:
    url: "{{ gitlab_repository_installation_script_url }}"
    dest: /tmp/gitlab_install_repository.sh
    validate_certs: "{{ gitlab_download_validate_certs }}"

- name: Install GitLab repository.
  register: output
  when: not gitlab_file.stat.exists
  ansible.builtin.command: bash /tmp/gitlab_install_repository.sh

- name: Define the Gitlab package name.
  when: gitlab_version | default(false)
  ansible.builtin.set_fact:
    gitlab_package_name: "{{ gitlab_edition }}{{ gitlab_package_version_separator }}{{ gitlab_version }}"

- name: Install GitLab
  async: 600
  poll: 5
  when: not gitlab_file.stat.exists

  # Start and configure GitLab. Sometimes the first run fails, but after that,
  # restarts fix problems, so ignore failures on this run.
  ansible.builtin.package:
    name: "{{ gitlab_package_name | default(gitlab_edition) }}"
    state: present

- name: Reconfigure GitLab (first run).
  failed_when: false
  ansible.builtin.command: >
    gitlab-ctl reconfigure
    creates=/var/opt/gitlab/bootstrapped

- name: Create GitLab SSL configuration folder.
  when: gitlab_create_self_signed_cert
  ansible.builtin.file:
    path: /etc/gitlab/ssl
    state: directory
    owner: root
    group: root
    mode: 448

- name: Create self-signed certificate.
  when: gitlab_create_self_signed_cert
  ansible.builtin.command: >
    openssl req -new -nodes -x509 -subj "{{ gitlab_self_signed_cert_subj }}"
    -days 3650 -keyout {{ gitlab_ssl_certificate_key }} -out {{ gitlab_ssl_certificate }} -extensions v3_ca
    creates={{ gitlab_ssl_certificate }}

- name: Copy GitLab configuration file.
  notify: restart gitlab
  ansible.builtin.template:
    src: "{{ gitlab_config_template }}"
    dest: /etc/gitlab/gitlab.rb
    owner: root
    group: root
    mode: 384
